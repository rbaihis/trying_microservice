server:
  port: 8040

notification-service:
  message:
    queue-order: order-topic
    queue-payment: payment-topic

management:
  metrics:
    tags:
      application: notification-service

spring:
  mail:
    host: 192.168.43.10
    port: 1025
    username:
    password:
    properties:
      mail:
        smtp:
          trust: "*"
        auth: false
        starttls:
          enabled: false
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000

  data:
    redis:
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: 1000
      host: 192.168.43.10
      port: 6379
      password:
      timeout: 2000

  kafka:
    listener:
      ack-mode: manual
    consumer:
      bootstrap-servers: 192.168.43.10:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        interceptor.classes: tn.seif.ecommerce.config.internal.KafkaConsumerInterceptor
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: paymentConfirmation:tn.seif.ecommerce.notification.dto.PaymentConfirmation,orderConfirmation:tn.seif.ecommerce.notification.dto.OrderConfirmation
        fetch.min.bytes: 1
        fetch.max.wait.ms: 500
        session.timeout.ms: 10000
        heartbeat.interval.ms: 3000
      enable-auto-commit: false # Max records to fetch in a single poll
      max-poll-records: 30 # Max records to fetch in a single poll  # Session timeout for detecting failures
      heartbeat-interval: 3000
      fetch-min-size: 1
      fetch-max-wait: 500




